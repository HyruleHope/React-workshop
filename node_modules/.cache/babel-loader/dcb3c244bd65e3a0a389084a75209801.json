{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bamel\\\\Documents\\\\WSF\\\\React\\\\React-workshop\\\\src\\\\components\\\\ImageGalleryPicker.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Gallery from 'react-photo-gallery';\nimport SelectedImage from '../private/SelectedImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageGalleryPicker = _ref => {\n  _s();\n\n  let {\n    onClose,\n    onSubmit\n  } = _ref;\n  const [selectedPicture, setSelectedPicture] = useState(null);\n  const [pictures, setPictures] = useState([]);\n\n  async function getPicture() {\n    // [TODO] Fetch picture\n    const data = await getAllPicture();\n    convertToFormData(data);\n  }\n\n  useEffect(() => {\n    // chaque fois que l'id change\n    getPicture();\n  }, [id]);\n\n  function handleOnClick(picture) {\n    setSelectedPicture(picture);\n  }\n\n  const imageRenderer = useCallback(_ref2 => {\n    let {\n      index,\n      left,\n      top,\n      key,\n      photo\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(SelectedImage, {\n      onClick: handleOnClick,\n      selected: selectedPicture ? selectedPicture.id === photo.id : false,\n      margin: '2px',\n      index: index,\n      photo: photo,\n      left: left,\n      top: top\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }, [selectedPicture]);\n\n  function handleOnSubmit() {\n    onClose();\n\n    if (selectedPicture) {\n      onSubmit(selectedPicture);\n    }\n  }\n\n  const rawPictures = pictures.map(picture => ({\n    src: picture.download_url,\n    width: 4,\n    height: 3,\n    id: picture.id\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal post-image-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"modal-card-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-card-title\",\n          children: \"Select a picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          \"aria-label\": \"close\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modal-card-body\",\n        children: /*#__PURE__*/_jsxDEV(Gallery, {\n          photos: rawPictures,\n          renderImage: imageRenderer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"modal-card-foot\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !!!selectedPicture,\n          className: \"button is-success\",\n          onClick: handleOnSubmit,\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageGalleryPicker, \"wpdEdh3y4tJaNS316TIZ6GfIJDs=\");\n\n_c = ImageGalleryPicker;\nexport default ImageGalleryPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGalleryPicker\");","map":{"version":3,"sources":["C:/Users/bamel/Documents/WSF/React/React-workshop/src/components/ImageGalleryPicker.tsx"],"names":["React","useState","useCallback","Gallery","SelectedImage","ImageGalleryPicker","onClose","onSubmit","selectedPicture","setSelectedPicture","pictures","setPictures","getPicture","data","getAllPicture","convertToFormData","useEffect","id","handleOnClick","picture","imageRenderer","index","left","top","key","photo","handleOnSubmit","rawPictures","map","src","download_url","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport Gallery from 'react-photo-gallery'\r\nimport { Picker_Picture, API_Picture } from '../api/types'\r\nimport SelectedImage from '../private/SelectedImage'\r\n\r\ntype ImageGalleryPickerProps = {\r\n    onClose: () => void\r\n    onSubmit: (picture: Picker_Picture) => void\r\n}\r\n\r\nconst ImageGalleryPicker = ({ onClose, onSubmit }: ImageGalleryPickerProps) => {\r\n    const [selectedPicture, setSelectedPicture] =\r\n        useState<null | Picker_Picture>(null)\r\n    const [pictures, setPictures] = useState<Array<API_Picture>>([])\r\n\r\n    async function getPicture() {\r\n        // [TODO] Fetch picture\r\n        const data = await getAllPicture();\r\n        convertToFormData(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n      // chaque fois que l'id change\r\n      getPicture();\r\n    }, [id]);\r\n\r\n    function handleOnClick(picture: Picker_Picture) {\r\n        setSelectedPicture(picture)\r\n    }\r\n\r\n    const imageRenderer = useCallback(\r\n        ({ index, left, top, key, photo }) => (\r\n            <SelectedImage\r\n                onClick={handleOnClick}\r\n                selected={\r\n                    selectedPicture ? selectedPicture.id === photo.id : false\r\n                }\r\n                key={key}\r\n                margin={'2px'}\r\n                index={index}\r\n                photo={photo}\r\n                left={left}\r\n                top={top}\r\n            />\r\n        ),\r\n        [selectedPicture]\r\n    )\r\n\r\n    function handleOnSubmit() {\r\n        onClose()\r\n        if (selectedPicture) {\r\n            onSubmit(selectedPicture)\r\n        }\r\n    }\r\n\r\n    const rawPictures = pictures.map((picture) => ({\r\n        src: picture.download_url,\r\n        width: 4,\r\n        height: 3,\r\n        id: picture.id,\r\n    }))\r\n\r\n    return (\r\n        <div className=\"modal post-image-modal\">\r\n            <div className=\"modal-background\"></div>\r\n            <div className=\"modal-card\">\r\n                <header className=\"modal-card-head\">\r\n                    <p className=\"modal-card-title\">Select a picture</p>\r\n                    <button\r\n                        className=\"delete\"\r\n                        aria-label=\"close\"\r\n                        onClick={onClose}\r\n                    />\r\n                </header>\r\n                <section className=\"modal-card-body\">\r\n                    <Gallery photos={rawPictures} renderImage={imageRenderer} />\r\n                </section>\r\n                <footer className=\"modal-card-foot\">\r\n                    <button\r\n                        disabled={!!!selectedPicture}\r\n                        className=\"button is-success\"\r\n                        onClick={handleOnSubmit}\r\n                    >\r\n                        Save changes\r\n                    </button>\r\n                    <button className=\"button\" onClick={onClose}>\r\n                        Cancel\r\n                    </button>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGalleryPicker\r\n"]},"metadata":{},"sourceType":"module"}