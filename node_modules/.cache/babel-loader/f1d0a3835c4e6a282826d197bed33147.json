{"ast":null,"code":"import axios from 'axios';\nconst base_url = 'http://localhost:3004/posts';\n\nasync function getPost(postID) {\n  // get a unique post\n  const response = await fetch(`${base_url}/${postID}`);\n  return await response.json();\n}\n\nasync function getPosts() {\n  // get all posts\n  const response = await fetch(base_url);\n  return await response.json();\n}\n\nasync function createPost(post) {\n  // create a new post\n  // [TODO] remove this return to use a fetch API\n  let data = {\n    userId: post.userId,\n    title: post.title,\n    body: post.body\n  };\n  const response = await axios.post(`${base_url}/${post.id}`, data);\n  console.log(\"response\", response); // return {\n  //     id: 1,\n  //     title: 'title',\n  //     userId: 1,\n  //     body: 'body',\n  //     postImageUrl: 'https://picsum.photos/1280/960',\n  // }\n}\n\nasync function updatePost(post) {\n  // update a existing post\n  // [TODO] remove this return to use a fetch API\n  return {\n    id: 1,\n    title: 'title',\n    userId: 1,\n    body: 'body',\n    postImageUrl: 'https://picsum.photos/1280/960'\n  };\n}\n\nasync function deletePost(postID) {\n  // delete a existing post\n  // [TODO] remove this return to use a fetch API\n  return 1;\n}\n\nexport { getPost, getPosts, deletePost, updatePost, createPost };","map":{"version":3,"sources":["C:/Users/bamel/Documents/WSF/React/React-workshop/src/api/post.ts"],"names":["axios","base_url","getPost","postID","response","fetch","json","getPosts","createPost","post","data","userId","title","body","id","console","log","updatePost","postImageUrl","deletePost"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,6BAAjB;;AAEA,eAAeC,OAAf,CAAuBC,MAAvB,EAA0D;AACtD;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,IAAGE,MAAO,EAAvB,CAA5B;AACA,SAAO,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACH;;AAED,eAAeC,QAAf,GAAgD;AAC5C;AACF,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAD,CAA5B;AACA,SAAO,MAAMG,QAAQ,CAACE,IAAT,EAAb;AACD;;AAED,eAAeE,UAAf,CAA0BC,IAA1B,EAA4D;AACxD;AACA;AAEA,MAAIC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAEF,IAAI,CAACE,MADJ;AAETC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAFH;AAGTC,IAAAA,IAAI,EAAEJ,IAAI,CAACI;AAHF,GAAX;AAKA,QAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACS,IAAN,CAAY,GAAER,QAAS,IAAGQ,IAAI,CAACK,EAAG,EAAlC,EAAoCJ,IAApC,CAAvB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBZ,QAAvB,EAVwD,CAYxD;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,eAAea,UAAf,CAA0BR,IAA1B,EAAqD;AACjD;AACA;AACA,SAAO;AACHK,IAAAA,EAAE,EAAE,CADD;AAEHF,IAAAA,KAAK,EAAE,OAFJ;AAGHD,IAAAA,MAAM,EAAE,CAHL;AAIHE,IAAAA,IAAI,EAAE,MAJH;AAKHK,IAAAA,YAAY,EAAE;AALX,GAAP;AAOH;;AAED,eAAeC,UAAf,CAA0BhB,MAA1B,EAAmE;AAC/D;AACA;AACA,SAAO,CAAP;AACH;;AAED,SAASD,OAAT,EAAkBK,QAAlB,EAA4BY,UAA5B,EAAwCF,UAAxC,EAAoDT,UAApD","sourcesContent":["import { Post, PostContent } from './types'\r\nimport axios from 'axios'\r\n\r\nconst base_url = 'http://localhost:3004/posts'\r\n\r\nasync function getPost(postID: Post['id']): Promise<Post> {\r\n    // get a unique post\r\n    const response = await fetch(`${base_url}/${postID}`);\r\n    return await response.json();\r\n}\r\n\r\nasync function getPosts(): Promise<Array<Post>> {\r\n    // get all posts\r\n  const response = await fetch(base_url);\r\n  return await response.json();\r\n}\r\n\r\nasync function createPost(post: PostContent): Promise<Post> {\r\n    // create a new post\r\n    // [TODO] remove this return to use a fetch API\r\n\r\n    let data = {\r\n      userId: post.userId,\r\n      title: post.title,\r\n      body: post.body\r\n    }\r\n    const response = await axios.post(`${base_url}/${post.id}`,data);\r\n    console.log(\"response\",response)\r\n\r\n    // return {\r\n    //     id: 1,\r\n    //     title: 'title',\r\n    //     userId: 1,\r\n    //     body: 'body',\r\n    //     postImageUrl: 'https://picsum.photos/1280/960',\r\n    // }\r\n}\r\n\r\nasync function updatePost(post: Post): Promise<Post> {\r\n    // update a existing post\r\n    // [TODO] remove this return to use a fetch API\r\n    return {\r\n        id: 1,\r\n        title: 'title',\r\n        userId: 1,\r\n        body: 'body',\r\n        postImageUrl: 'https://picsum.photos/1280/960',\r\n    }\r\n}\r\n\r\nasync function deletePost(postID: Post['id']): Promise<Post['id']> {\r\n    // delete a existing post\r\n    // [TODO] remove this return to use a fetch API\r\n    return 1\r\n}\r\n\r\nexport { getPost, getPosts, deletePost, updatePost, createPost }\r\n"]},"metadata":{},"sourceType":"module"}