{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bamel\\\\Documents\\\\WSF\\\\React\\\\React-workshop\\\\src\\\\components\\\\EditPost.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport Field from '../private/Field';\nimport ImageGalleryPicker from './ImageGalleryPicker';\nimport { getPost } from '../api/post';\nimport { getAllUser } from '../api/user';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base_url = 'http://localhost:3004/posts';\nconst post_url = 'http://localhost:3000/post';\n\nconst formReducer = (state, event) => {\n  return { ...state,\n    [event.name]: event.value\n  };\n};\n\nconst EditPost = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [showPictureModal, setShowPictureModal] = useState(false);\n  const [formData, setFormData] = useReducer(formReducer, {});\n  let {\n    id\n  } = useParams(); // post id from url\n\n  console.log(\"id\", id);\n  const navigate = useNavigate(); // create a navigate function instance\n\n  async function _getPosts(id) {\n    const data = await getPost(id);\n    convertToFormData(data);\n  }\n\n  async function _getUsers() {\n    const data = await getAllUser();\n    setUsers(data);\n  }\n\n  useEffect(() => {\n    // at component start\n    _getPosts(Number(id));\n  }, [id]);\n  useEffect(() => {\n    _getUsers();\n  }, [id]);\n\n  function handleModalPictureSubmit(picture) {\n    setFormData({\n      name: 'postImageUrl',\n      value: picture.src\n    });\n  }\n\n  async function handleAddOrCreatePost(event) {\n    axios.post(base_url, formData).then(res => console.log(res)).catch(err => console.log(err)); // back to Home\n\n    navigate('/');\n  }\n\n  async function handleDeletePost() {\n    axios.delete(`${post_url}/${{\n      id\n    }}`).then(() => {\n      alert(\"Post deleted!\");\n      setPost(null);\n    }); // back to Home\n\n    navigate('/');\n  }\n\n  function handleChange(event) {\n    //\n    const value = event.target.name === 'userId' ? Number(event.target.value) : event.target.value;\n    setFormData({\n      name: event.target.name,\n      value\n    });\n  }\n\n  function convertToFormData(post) {\n    // helper to convert post data into formData\n    // use it before set formData with API data\n    // ex: convertToFormData(data):\n    ;\n    Object.keys(post).map(key => {\n      setFormData({\n        name: key,\n        value: post[key]\n      });\n    });\n  }\n\n  function handleToggleModal() {\n    // Show & Hide picture modal\n    setShowPictureModal(s => !s);\n  }\n\n  function getSelectedPicture() {\n    // prevent bad request and use a placeholder if no data\n    if (formData.postImageUrl) {\n      return formData.postImageUrl;\n    } else {\n      return 'https://via.placeholder.com/320/810b14';\n    }\n  }\n\n  function getSelectedAuthor() {\n    // prevent bad request and use a placeholder if no data\n    if (formData.userId) {\n      // [WORK]\n      // You need to find the author name with the server\n      const selectedUser = users.find(user => user.id === formData.userId);\n\n      if (selectedUser) {\n        return selectedUser.name;\n      }\n    }\n\n    return 'Unknown author';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handleAddOrCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        label: \"Title\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onBlur: handleChange,\n          name: \"title\",\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Text input\",\n          onChange: handleChange,\n          value: formData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Content\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onBlur: handleChange,\n          name: \"body\",\n          className: \"textarea\",\n          placeholder: \"e.g. Hello world\",\n          onChange: handleChange,\n          value: formData.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Post creator\",\n        children: !!!id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select\",\n          defaultValue: formData.userId,\n          children: users.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"userId\",\n            onChange: handleChange,\n            defaultValue: users[0].id,\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.name\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          children: getSelectedAuthor()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Post Picture\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          value: \"1\",\n          name: \"postImageID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getSelectedPicture()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button is-primary\",\n            onClick: handleToggleModal,\n            children: \"Open picker modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), !!id && /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Extra actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button is-warning\",\n          onClick: handleDeletePost,\n          children: \"Delete post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped is-grouped-centered\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"button is-light\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), showPictureModal && /*#__PURE__*/_jsxDEV(ImageGalleryPicker, {\n      onClose: handleToggleModal,\n      onSubmit: handleModalPictureSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditPost, \"MtYpzX/a2SyO8GLWJInV0yCxvv4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["C:/Users/bamel/Documents/WSF/React/React-workshop/src/components/EditPost.tsx"],"names":["React","useReducer","useState","useEffect","Link","useNavigate","useParams","Field","ImageGalleryPicker","getPost","getAllUser","axios","base_url","post_url","formReducer","state","event","name","value","EditPost","users","setUsers","showPictureModal","setShowPictureModal","formData","setFormData","id","console","log","navigate","_getPosts","data","convertToFormData","_getUsers","Number","handleModalPictureSubmit","picture","src","handleAddOrCreatePost","post","then","res","catch","err","handleDeletePost","delete","alert","setPost","handleChange","target","Object","keys","map","key","handleToggleModal","s","getSelectedPicture","postImageUrl","getSelectedAuthor","userId","selectedUser","find","user","title","body","length"],"mappings":"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","sourcesContent":["import React, { useReducer, useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { Picker_Picture, Post, PostContent, User } from '../api/types'\r\nimport Field from '../private/Field'\r\nimport ImageGalleryPicker from './ImageGalleryPicker'\r\nimport { getPosts, getPost, deletePost, updatePost } from '../api/post'\r\nimport { getAllUser } from '../api/user'\r\nimport axios from 'axios'\r\n\r\nconst base_url = 'http://localhost:3004/posts'\r\nconst post_url = 'http://localhost:3000/post'\r\n\r\ntype FormEvent =\r\n    | React.ChangeEvent<HTMLTextAreaElement>\r\n    | React.ChangeEvent<HTMLInputElement>\r\n    | React.ChangeEvent<HTMLSelectElement>\r\n\r\ntype FormData = { name: string; value: string | number | undefined }\r\n\r\nconst formReducer = (state: Post | PostContent, event: FormData) => {\r\n    return {\r\n        ...state,\r\n        [event.name]: event.value,\r\n    }\r\n}\r\n\r\nconst EditPost = () => {\r\n    const [users, setUsers] = useState<Array<User>>([])\r\n    const [showPictureModal, setShowPictureModal] = useState<boolean>(false)\r\n    const [formData, setFormData] = useReducer(\r\n        formReducer,\r\n        {} as Post | PostContent\r\n    )\r\n    let { id } = useParams() // post id from url\r\n\r\n    console.log(\"id\", id);\r\n    const navigate = useNavigate() // create a navigate function instance\r\n\r\n    async function _getPosts(id: number){\r\n      const data = await getPost(id);\r\n      convertToFormData(data);\r\n    }\r\n\r\n    async function _getUsers(){\r\n      const data = await getAllUser();\r\n      setUsers(data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      // at component start\r\n      _getPosts(Number(id));\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n      _getUsers();\r\n    }, [id]);\r\n\r\n\r\n\r\n    function handleModalPictureSubmit(picture: Picker_Picture) {\r\n        setFormData({\r\n            name: 'postImageUrl',\r\n            value: picture.src,\r\n        })\r\n    }\r\n\r\n    async function handleAddOrCreatePost(event: React.FormEvent<HTMLFormElement>) {\r\n      axios\r\n      .post(base_url, formData)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err));\r\n\r\n      // back to Home\r\n      navigate('/')\r\n    }\r\n\r\n    async function handleDeletePost() {\r\n      axios\r\n      .delete(`${post_url}/${{ id }}`)\r\n      .then(() => {\r\n        alert(\"Post deleted!\");\r\n        setPost(null)\r\n      });\r\n\r\n      // back to Home\r\n      navigate('/')\r\n    }\r\n\r\n    function handleChange(event: FormEvent) {\r\n        //\r\n        const value =\r\n            event.target.name === 'userId'\r\n                ? Number(event.target.value)\r\n                : event.target.value\r\n        setFormData({\r\n            name: event.target.name,\r\n            value,\r\n        })\r\n    }\r\n\r\n    function convertToFormData(post: Post): void {\r\n        // helper to convert post data into formData\r\n        // use it before set formData with API data\r\n        // ex: convertToFormData(data):\r\n        ;(Object.keys(post) as Array<keyof typeof post>).map((key) => {\r\n            setFormData({\r\n                name: key,\r\n                value: post[key],\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleToggleModal() {\r\n        // Show & Hide picture modal\r\n        setShowPictureModal((s) => !s)\r\n    }\r\n\r\n    function getSelectedPicture() {\r\n        // prevent bad request and use a placeholder if no data\r\n        if (formData.postImageUrl) {\r\n            return formData.postImageUrl\r\n        } else {\r\n            return 'https://via.placeholder.com/320/810b14'\r\n        }\r\n    }\r\n\r\n    function getSelectedAuthor() {\r\n        // prevent bad request and use a placeholder if no data\r\n        if (formData.userId) {\r\n            // [WORK]\r\n            // You need to find the author name with the server\r\n          const selectedUser = users.find((user) => user.id === formData.userId)\r\n          if (selectedUser) {\r\n            return selectedUser.name;\r\n          }\r\n        }\r\n        return 'Unknown author'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"post-form\" onSubmit={handleAddOrCreatePost}>\r\n                <Field label=\"Title\">\r\n                    <input\r\n                        onBlur={handleChange}\r\n                        name=\"title\"\r\n                        className=\"input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Text input\"\r\n                        onChange={handleChange}\r\n                        value={formData.title}\r\n                    />\r\n                </Field>\r\n                <Field label=\"Content\">\r\n                    <textarea\r\n                        onBlur={handleChange}\r\n                        name=\"body\"\r\n                        className=\"textarea\"\r\n                        placeholder=\"e.g. Hello world\"\r\n                        onChange={handleChange}\r\n                        value={formData.body}\r\n                    />\r\n                </Field>\r\n                <Field label=\"Post creator\">\r\n                    {!!!id ? (\r\n                        <div className=\"select\" defaultValue={formData.userId}>\r\n                            {users.length > 0 && (\r\n                                <select\r\n                                    name=\"userId\"\r\n                                    onChange={handleChange}\r\n                                    defaultValue={users[0].id}\r\n                                >\r\n                                    {users.map((user) => (\r\n                                        <option key={user.id} value={user.id}>\r\n                                            {user.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <label>{getSelectedAuthor()}</label>\r\n                    )}\r\n                </Field>\r\n\r\n                <Field label=\"Post Picture\">\r\n                    <input type=\"hidden\" value=\"1\" name=\"postImageID\" />\r\n                    <div>\r\n                        <img src={getSelectedPicture()} />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"button is-primary\"\r\n                            onClick={handleToggleModal}\r\n                        >\r\n                            Open picker modal\r\n                        </button>\r\n                    </div>\r\n                </Field>\r\n\r\n                {!!id && (\r\n                    <Field label=\"Extra actions\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"button is-warning\"\r\n                            onClick={handleDeletePost}\r\n                        >\r\n                            Delete post\r\n                        </button>\r\n                    </Field>\r\n                )}\r\n\r\n                <div className=\"field is-grouped is-grouped-centered\">\r\n                    <p className=\"control\">\r\n                        <button type=\"submit\" className=\"button is-primary\">\r\n                            Submit\r\n                        </button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <Link to=\"/\" className=\"button is-light\">\r\n                            Cancel\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n            {showPictureModal && (\r\n                <ImageGalleryPicker\r\n                    onClose={handleToggleModal}\r\n                    onSubmit={handleModalPictureSubmit}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n"]},"metadata":{},"sourceType":"module"}