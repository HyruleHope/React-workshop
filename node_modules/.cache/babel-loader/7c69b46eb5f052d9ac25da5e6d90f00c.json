{"ast":null,"code":"const base_url = 'http://localhost:3004/posts';\n\nasync function getPost(postID) {\n  // get a unique post\n  const response = await fetch(`${base_url}/${postID}`);\n  return await response.json();\n}\n\nasync function getPosts() {\n  // get all posts\n  const response = await fetch(base_url);\n  return await response.json();\n}\n\nasync function createPost(post) {\n  // create a new post\n  // [TODO] remove this return to use a fetch API\n  // Send data to the backend via POST\n  // fetch(base_url, {  // Enter your IP address here\n  //   method: 'POST',\n  //   mode: 'cors',\n  //   body: JSON.stringify(PostContent) // body data type must match \"Content-Type\" header\n  //\n  // })\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: 'React POST Request Example'\n    })\n  };\n  const response = await fetch('https://reqres.in/api/posts', requestOptions);\n  const data = await response.json();\n  this.setState({\n    postId: data.id\n  }); // return {\n  //     id: 1,\n  //     title: 'title',\n  //     userId: 1,\n  //     body: 'body',\n  //     postImageUrl: 'https://picsum.photos/1280/960',\n  // }\n}\n\nasync function updatePost(post) {\n  // update a existing post\n  // [TODO] remove this return to use a fetch API\n  return {\n    id: 1,\n    title: 'title',\n    userId: 1,\n    body: 'body',\n    postImageUrl: 'https://picsum.photos/1280/960'\n  };\n}\n\nasync function deletePost(postID) {\n  // delete a existing post\n  // [TODO] remove this return to use a fetch API\n  return 1;\n}\n\nexport { getPost, getPosts, deletePost, updatePost, createPost };","map":{"version":3,"sources":["C:/Users/bamel/Documents/WSF/React/React-workshop/src/api/post.ts"],"names":["base_url","getPost","postID","response","fetch","json","getPosts","createPost","post","requestOptions","method","headers","body","JSON","stringify","title","data","setState","postId","id","updatePost","userId","postImageUrl","deletePost"],"mappings":"AAIA,MAAMA,QAAQ,GAAG,6BAAjB;;AAEA,eAAeC,OAAf,CAAuBC,MAAvB,EAA0D;AACtD;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,IAAGE,MAAO,EAAvB,CAA5B;AACA,SAAO,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACH;;AAED,eAAeC,QAAf,GAAgD;AAC5C;AACF,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAD,CAA5B;AACA,SAAO,MAAMG,QAAQ,CAACE,IAAT,EAAb;AACD;;AAED,eAAeE,UAAf,CAA0BC,IAA1B,EAA4D;AACxD;AACA;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAf;AAHa,GAAvB;AAKA,QAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgCK,cAAhC,CAA5B;AACA,QAAMO,IAAI,GAAG,MAAMb,QAAQ,CAACE,IAAT,EAAnB;AACA,OAAKY,QAAL,CAAc;AAAEC,IAAAA,MAAM,EAAEF,IAAI,CAACG;AAAf,GAAd,EAnBoD,CAoBxD;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,eAAeC,UAAf,CAA0BZ,IAA1B,EAAqD;AACjD;AACA;AACA,SAAO;AACHW,IAAAA,EAAE,EAAE,CADD;AAEHJ,IAAAA,KAAK,EAAE,OAFJ;AAGHM,IAAAA,MAAM,EAAE,CAHL;AAIHT,IAAAA,IAAI,EAAE,MAJH;AAKHU,IAAAA,YAAY,EAAE;AALX,GAAP;AAOH;;AAED,eAAeC,UAAf,CAA0BrB,MAA1B,EAAmE;AAC/D;AACA;AACA,SAAO,CAAP;AACH;;AAED,SAASD,OAAT,EAAkBK,QAAlB,EAA4BiB,UAA5B,EAAwCH,UAAxC,EAAoDb,UAApD","sourcesContent":["import { Post, PostContent } from './types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst base_url = 'http://localhost:3004/posts'\r\n\r\nasync function getPost(postID: Post['id']): Promise<Post> {\r\n    // get a unique post\r\n    const response = await fetch(`${base_url}/${postID}`);\r\n    return await response.json();\r\n}\r\n\r\nasync function getPosts(): Promise<Array<Post>> {\r\n    // get all posts\r\n  const response = await fetch(base_url);\r\n  return await response.json();\r\n}\r\n\r\nasync function createPost(post: PostContent): Promise<Post> {\r\n    // create a new post\r\n    // [TODO] remove this return to use a fetch API\r\n\r\n    // Send data to the backend via POST\r\n        // fetch(base_url, {  // Enter your IP address here\r\n        //   method: 'POST',\r\n        //   mode: 'cors',\r\n        //   body: JSON.stringify(PostContent) // body data type must match \"Content-Type\" header\r\n        //\r\n        // })\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title: 'React POST Request Example' })\r\n        };\r\n        const response = await fetch('https://reqres.in/api/posts', requestOptions);\r\n        const data = await response.json();\r\n        this.setState({ postId: data.id });\r\n    // return {\r\n    //     id: 1,\r\n    //     title: 'title',\r\n    //     userId: 1,\r\n    //     body: 'body',\r\n    //     postImageUrl: 'https://picsum.photos/1280/960',\r\n    // }\r\n}\r\n\r\nasync function updatePost(post: Post): Promise<Post> {\r\n    // update a existing post\r\n    // [TODO] remove this return to use a fetch API\r\n    return {\r\n        id: 1,\r\n        title: 'title',\r\n        userId: 1,\r\n        body: 'body',\r\n        postImageUrl: 'https://picsum.photos/1280/960',\r\n    }\r\n}\r\n\r\nasync function deletePost(postID: Post['id']): Promise<Post['id']> {\r\n    // delete a existing post\r\n    // [TODO] remove this return to use a fetch API\r\n    return 1\r\n}\r\n\r\nexport { getPost, getPosts, deletePost, updatePost, createPost }\r\n"]},"metadata":{},"sourceType":"module"}