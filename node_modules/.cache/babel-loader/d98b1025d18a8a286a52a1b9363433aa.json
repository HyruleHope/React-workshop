{"ast":null,"code":"const base_url = 'http://localhost:3004/users';\n\nasync function getAllUser() {\n  // Get all users\n  // [TODO] remove this return to use a fetch API\n  // const response = await fetch(base_url);\n  // return await response.json()\n  return [{\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874'\n    },\n    phone: '1-770-736-8031 x56442',\n    company: {\n      name: 'Romaguera-Crona'\n    }\n  }, {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771'\n    },\n    phone: '010-692-6593 x09125',\n    company: {\n      name: 'Deckow-Crist'\n    }\n  }];\n}\n\nasync function getUser(id) {\n  // Get a user\n  // [TODO] remove this return to use a fetch API\n  return {\n    id,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874'\n    },\n    phone: '1-770-736-8031 x56442',\n    company: {\n      name: 'Romaguera-Crona'\n    }\n  };\n}\n\nexport { getAllUser, getUser };","map":{"version":3,"sources":["C:/Users/bamel/Documents/WSF/React/React-workshop/src/api/user.ts"],"names":["base_url","getAllUser","id","name","username","email","address","street","suite","city","zipcode","phone","company","getUser"],"mappings":"AAEA,MAAMA,QAAQ,GAAG,6BAAjB;;AAEA,eAAeC,UAAf,GAAkD;AAC9C;AACA;AAEA;AACA;AAEA,SAAO,CACH;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,QAAQ,EAAE,MAHd;AAIIC,IAAAA,KAAK,EAAE,mBAJX;AAKIC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,aADH;AAELC,MAAAA,KAAK,EAAE,UAFF;AAGLC,MAAAA,IAAI,EAAE,aAHD;AAILC,MAAAA,OAAO,EAAE;AAJJ,KALb;AAWIC,IAAAA,KAAK,EAAE,uBAXX;AAYIC,IAAAA,OAAO,EAAE;AACLT,MAAAA,IAAI,EAAE;AADD;AAZb,GADG,EAiBH;AACID,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,QAAQ,EAAE,WAHd;AAIIC,IAAAA,KAAK,EAAE,mBAJX;AAKIC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,eADH;AAELC,MAAAA,KAAK,EAAE,WAFF;AAGLC,MAAAA,IAAI,EAAE,aAHD;AAILC,MAAAA,OAAO,EAAE;AAJJ,KALb;AAWIC,IAAAA,KAAK,EAAE,qBAXX;AAYIC,IAAAA,OAAO,EAAE;AACLT,MAAAA,IAAI,EAAE;AADD;AAZb,GAjBG,CAAP;AAkCH;;AAED,eAAeU,OAAf,CAAuBX,EAAvB,EAAsD;AAClD;AACA;AACA,SAAO;AACHA,IAAAA,EADG;AAEHC,IAAAA,IAAI,EAAE,eAFH;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,KAAK,EAAE,mBAJJ;AAKHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,aADH;AAELC,MAAAA,KAAK,EAAE,UAFF;AAGLC,MAAAA,IAAI,EAAE,aAHD;AAILC,MAAAA,OAAO,EAAE;AAJJ,KALN;AAWHC,IAAAA,KAAK,EAAE,uBAXJ;AAYHC,IAAAA,OAAO,EAAE;AACLT,MAAAA,IAAI,EAAE;AADD;AAZN,GAAP;AAgBH;;AAED,SAASF,UAAT,EAAqBY,OAArB","sourcesContent":["import { User } from './types'\r\n\r\nconst base_url = 'http://localhost:3004/users'\r\n\r\nasync function getAllUser(): Promise<Array<User>> {\r\n    // Get all users\r\n    // [TODO] remove this return to use a fetch API\r\n\r\n    // const response = await fetch(base_url);\r\n    // return await response.json()\r\n\r\n    return [\r\n        {\r\n            id: 1,\r\n            name: 'Leanne Graham',\r\n            username: 'Bret',\r\n            email: 'Sincere@april.biz',\r\n            address: {\r\n                street: 'Kulas Light',\r\n                suite: 'Apt. 556',\r\n                city: 'Gwenborough',\r\n                zipcode: '92998-3874',\r\n            },\r\n            phone: '1-770-736-8031 x56442',\r\n            company: {\r\n                name: 'Romaguera-Crona',\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ervin Howell',\r\n            username: 'Antonette',\r\n            email: 'Shanna@melissa.tv',\r\n            address: {\r\n                street: 'Victor Plains',\r\n                suite: 'Suite 879',\r\n                city: 'Wisokyburgh',\r\n                zipcode: '90566-7771',\r\n            },\r\n            phone: '010-692-6593 x09125',\r\n            company: {\r\n                name: 'Deckow-Crist',\r\n            },\r\n        },\r\n    ]\r\n}\r\n\r\nasync function getUser(id: User['id']): Promise<User> {\r\n    // Get a user\r\n    // [TODO] remove this return to use a fetch API\r\n    return {\r\n        id,\r\n        name: 'Leanne Graham',\r\n        username: 'Bret',\r\n        email: 'Sincere@april.biz',\r\n        address: {\r\n            street: 'Kulas Light',\r\n            suite: 'Apt. 556',\r\n            city: 'Gwenborough',\r\n            zipcode: '92998-3874',\r\n        },\r\n        phone: '1-770-736-8031 x56442',\r\n        company: {\r\n            name: 'Romaguera-Crona',\r\n        },\r\n    }\r\n}\r\n\r\nexport { getAllUser, getUser }\r\n"]},"metadata":{},"sourceType":"module"}