[{"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\index.tsx":"1","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\reportWebVitals.ts":"2","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\App.tsx":"3","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\EditPost.tsx":"4","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\UserProfile.tsx":"5","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\PostsList.tsx":"6","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\AllUsers.tsx":"7","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\Header.tsx":"8","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\Field.tsx":"9","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\ImageGalleryPicker.tsx":"10","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\PostItem.tsx":"11","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\SelectedImage.tsx":"12","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\Checkmark.tsx":"13","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\post.ts":"14","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\photo.ts":"15","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\user.ts":"16","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\types.ts":"17","C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\EditUser.tsx":"18"},{"size":517,"mtime":1649599741224,"results":"19","hashOfConfig":"20"},{"size":440,"mtime":1649599741231,"results":"21","hashOfConfig":"20"},{"size":986,"mtime":1649953810767,"results":"22","hashOfConfig":"20"},{"size":7567,"mtime":1650030165265,"results":"23","hashOfConfig":"20"},{"size":1095,"mtime":1649955887007,"results":"24","hashOfConfig":"20"},{"size":1348,"mtime":1649946436338,"results":"25","hashOfConfig":"20"},{"size":694,"mtime":1649953647608,"results":"26","hashOfConfig":"20"},{"size":1663,"mtime":1649599741228,"results":"27","hashOfConfig":"20"},{"size":353,"mtime":1649599741227,"results":"28","hashOfConfig":"20"},{"size":3017,"mtime":1649756202722,"results":"29","hashOfConfig":"20"},{"size":1847,"mtime":1650012003123,"results":"30","hashOfConfig":"20"},{"size":2784,"mtime":1649599741229,"results":"31","hashOfConfig":"20"},{"size":878,"mtime":1649599741226,"results":"32","hashOfConfig":"20"},{"size":1316,"mtime":1650030244844,"results":"33","hashOfConfig":"20"},{"size":495,"mtime":1649928626594,"results":"34","hashOfConfig":"20"},{"size":1393,"mtime":1650030217970,"results":"35","hashOfConfig":"20"},{"size":728,"mtime":1649599741213,"results":"36","hashOfConfig":"20"},{"size":4100,"mtime":1650030195143,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ug24e1",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\index.tsx",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\reportWebVitals.ts",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\App.tsx",["94"],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\EditPost.tsx",["95","96","97","98"],[],"import React, { useReducer, useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { Picker_Picture, Post, PostContent, User } from '../api/types'\r\nimport Field from '../private/Field'\r\nimport ImageGalleryPicker from './ImageGalleryPicker'\r\nimport { getPosts, getPost, updatePost, createPost } from '../api/post'\r\nimport { getAllUser } from '../api/user'\r\nimport axios from 'axios'\r\n\r\nconst base_url = 'http://localhost:3004/posts'\r\n\r\ntype FormEvent =\r\n    | React.ChangeEvent<HTMLTextAreaElement>\r\n    | React.ChangeEvent<HTMLInputElement>\r\n    | React.ChangeEvent<HTMLSelectElement>\r\n\r\ntype FormData = { name: string; value: string | number | undefined }\r\n\r\nconst formReducer = (state: Post | PostContent, event: FormData) => {\r\n    return {\r\n        ...state,\r\n        [event.name]: event.value,\r\n    }\r\n}\r\n\r\nconst EditPost = () => {\r\n    const [users, setUsers] = useState<Array<User>>([])\r\n    const [showPictureModal, setShowPictureModal] = useState<boolean>(false)\r\n    const [formData, setFormData] = useReducer(\r\n        formReducer,\r\n        {} as Post | PostContent\r\n    )\r\n    let { id } = useParams() // post id from url\r\n\r\n    const navigate = useNavigate() // create a navigate function instance\r\n\r\n    async function _getPosts(id: number){\r\n      const data = await getPost(id);\r\n      convertToFormData(data);\r\n    }\r\n\r\n    async function _getUsers(){\r\n      const data = await getAllUser();\r\n      setUsers(data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      // au start du composant\r\n      _getPosts(Number(id));\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n      _getUsers();\r\n    }, [id]);\r\n\r\n\r\n\r\n    function handleModalPictureSubmit(picture: Picker_Picture) {\r\n        setFormData({\r\n            name: 'postImageUrl',\r\n            value: picture.src,\r\n        })\r\n    }\r\n\r\n    async function handleAddOrCreatePost(\r\n        event: React.FormEvent<HTMLFormElement>\r\n    ) {\r\n        // remove default reloading page\r\n        console.log(formData);\r\n        event.preventDefault()\r\n        if (id) {\r\n           await updatePost(formData as Post);\r\n        } else {\r\n           await createPost(formData);\r\n        }\r\n        // back to Home\r\n        navigate('/')\r\n    }\r\n\r\n    async function handleDeletePost() {\r\n        // back to Home\r\n        axios.delete(`${base_url}/${id}`)\r\n        navigate('/')\r\n    }\r\n    function handleChange(event: FormEvent) {\r\n        const value =\r\n            event.target.name === 'userId'\r\n                ? Number(event.target.value)\r\n                : event.target.value\r\n        setFormData({\r\n            name: event.target.name,\r\n            value,\r\n        })\r\n    }\r\n\r\n    function convertToFormData(post: Post): void {\r\n        // helper to convert post data into formData\r\n        // use it before set formData with API data\r\n        // ex: convertToFormData(data):\r\n        ;(Object.keys(post) as Array<keyof typeof post>).map((key) => {\r\n            setFormData({\r\n                name: key,\r\n                value: post[key],\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleToggleModal() {\r\n        // Show & Hide picture modal\r\n        setShowPictureModal((s) => !s)\r\n    }\r\n\r\n    function getSelectedPicture() {\r\n        // prevent bad request and use a placeholder if no data\r\n        if (formData.postImageUrl) {\r\n            return formData.postImageUrl\r\n        } else {\r\n            return 'https://via.placeholder.com/320/810b14'\r\n        }\r\n    }\r\n\r\n    function getSelectedAuthor() {\r\n        // prevent bad request and use a placeholder if no data\r\n        if (formData.userId) {\r\n          const selectedUser = users.find((user) => user.id === formData.userId)\r\n          if (selectedUser) {\r\n            return selectedUser.name;\r\n          }\r\n        }\r\n        return 'Unknown author'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"post-form\" onSubmit={handleAddOrCreatePost}>\r\n                <Field label=\"Title\">\r\n                    <input\r\n                        onBlur={handleChange}\r\n                        name=\"title\"\r\n                        className=\"input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Text input\"\r\n                        onChange={handleChange}\r\n                        value={formData.title}\r\n                    />\r\n                </Field>\r\n                <Field label=\"Content\">\r\n                    <textarea\r\n                        onBlur={handleChange}\r\n                        name=\"body\"\r\n                        className=\"textarea\"\r\n                        placeholder=\"e.g. Hello world\"\r\n                        onChange={handleChange}\r\n                        value={formData.body}\r\n                    />\r\n                </Field>\r\n                <Field label=\"Post creator\">\r\n                    {!!!id ? (\r\n                        <div className=\"select\" defaultValue={formData.userId}>\r\n                            {users.length > 0 && (\r\n                                <select\r\n                                    name=\"userId\"\r\n                                    onChange={handleChange}\r\n                                    defaultValue={users[0].id}\r\n                                >\r\n                                    {users.map((user) => (\r\n                                        <option key={user.id} value={user.id}>\r\n                                            {user.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <label>{getSelectedAuthor()}</label>\r\n                    )}\r\n                </Field>\r\n\r\n                <Field label=\"Post Picture\">\r\n                    <input type=\"hidden\" value=\"1\" name=\"postImageID\" />\r\n                    <div>\r\n                        <img src={getSelectedPicture()} />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"button is-primary\"\r\n                            onClick={handleToggleModal}\r\n                        >\r\n                            Open picker modal\r\n                        </button>\r\n                    </div>\r\n                </Field>\r\n\r\n                {!!id && (\r\n                    <Field label=\"Extra actions\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"button is-warning\"\r\n                            onClick={handleDeletePost}\r\n                        >\r\n                            Delete post\r\n                        </button>\r\n                    </Field>\r\n                )}\r\n\r\n                <div className=\"field is-grouped is-grouped-centered\">\r\n                    <p className=\"control\">\r\n                        <button type=\"submit\" className=\"button is-primary\">\r\n                            Submit\r\n                        </button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <Link to=\"/\" className=\"button is-light\">\r\n                            Cancel\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n            {showPictureModal && (\r\n                <ImageGalleryPicker\r\n                    onClose={handleToggleModal}\r\n                    onSubmit={handleModalPictureSubmit}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n",["99","100"],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\UserProfile.tsx",["101","102"],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\PostsList.tsx",["103"],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\AllUsers.tsx",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\Header.tsx",["104","105","106"],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\Field.tsx",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\ImageGalleryPicker.tsx",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\PostItem.tsx",["107","108","109","110","111","112"],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\SelectedImage.tsx",["113"],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\private\\Checkmark.tsx",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\post.ts",["114","115","116"],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\photo.ts",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\user.ts",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\api\\types.ts",[],[],"C:\\Users\\bamel\\Documents\\WSF\\React\\React-workshop\\src\\components\\EditUser.tsx",["117","118","119","120","121","122","123"],[],{"ruleId":"124","severity":1,"message":"125","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":51,"column":8,"nodeType":"131","endLine":51,"endColumn":12,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":101,"column":68,"nodeType":"135","messageId":"136","endLine":101,"endColumn":70},{"ruleId":"137","severity":1,"message":"138","line":183,"column":25,"nodeType":"139","endLine":183,"endColumn":59},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"124","severity":1,"message":"144","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"145","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":19},{"ruleId":"124","severity":1,"message":"146","line":8,"column":21,"nodeType":"126","messageId":"127","endLine":8,"endColumn":31},{"ruleId":"147","severity":1,"message":"148","line":8,"column":17,"nodeType":"139","endLine":8,"endColumn":53},{"ruleId":"137","severity":1,"message":"138","line":9,"column":21,"nodeType":"139","endLine":9,"endColumn":48},{"ruleId":"147","severity":1,"message":"149","line":11,"column":17,"nodeType":"139","endLine":17,"endColumn":18},{"ruleId":"124","severity":1,"message":"150","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"151","line":1,"column":39,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"145","line":2,"column":16,"nodeType":"126","messageId":"127","endLine":2,"endColumn":25},{"ruleId":"124","severity":1,"message":"152","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"153","line":7,"column":20,"nodeType":"126","messageId":"127","endLine":7,"endColumn":29},{"ruleId":"154","severity":1,"message":"155","line":15,"column":25,"nodeType":"139","endLine":21,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":86,"column":13,"nodeType":"139","endLine":94,"endColumn":15},{"ruleId":"124","severity":1,"message":"156","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":13},{"ruleId":"124","severity":1,"message":"157","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":13},{"ruleId":"124","severity":1,"message":"144","line":3,"column":17,"nodeType":"126","messageId":"127","endLine":3,"endColumn":25},{"ruleId":"124","severity":1,"message":"151","line":1,"column":39,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"152","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"158","line":4,"column":31,"nodeType":"126","messageId":"127","endLine":4,"endColumn":41},{"ruleId":"124","severity":1,"message":"159","line":25,"column":12,"nodeType":"126","messageId":"127","endLine":25,"endColumn":17},{"ruleId":"124","severity":1,"message":"160","line":25,"column":19,"nodeType":"126","messageId":"127","endLine":25,"endColumn":27},{"ruleId":"124","severity":1,"message":"161","line":26,"column":12,"nodeType":"126","messageId":"127","endLine":26,"endColumn":28},{"ruleId":"124","severity":1,"message":"162","line":26,"column":30,"nodeType":"126","messageId":"127","endLine":26,"endColumn":49},"@typescript-eslint/no-unused-vars","'UserProfile' is defined but never used.","Identifier","unusedVar","'getPosts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_getPosts'. Either include it or remove the dependency array.","ArrayExpression",["163"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'useState' is defined but never used.","'useParams' is defined but never used.","'setLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'getUser' is defined but never used.","'setAuthor' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'axios' is defined but never used.","'React' is defined but never used.","'createUser' is defined but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'showPictureModal' is assigned a value but never used.","'setShowPictureModal' is assigned a value but never used.",{"desc":"166","fix":"167"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [_getPosts, id]",{"range":"168","text":"169"},[1589,1593],"[_getPosts, id]"]